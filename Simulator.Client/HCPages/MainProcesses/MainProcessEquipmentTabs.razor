@using Simulator.Client.HCPages.ContinuousSystems
@using Simulator.Client.HCPages.Lines
@using Simulator.Client.HCPages.Mixers
@using Simulator.Client.HCPages.Operators
@using Simulator.Client.HCPages.Pumps
@using Simulator.Client.HCPages.SimulationPlanneds
@using Simulator.Client.HCPages.SimulationPlanneds.ProcessFlowDiagram
@using Simulator.Client.HCPages.Tanks
@using Simulator.Shared.Models.HCs.SimulationPlanneds

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-1">
    <MudTabPanel Text="PFD">
        <MainProcessFlowDiagram Simulation=@Simulation isLoading=@isLoading RefreshProcessFlowDiagram="RefreshProcessFlowDiagram" MainProcessId="@MainProcessId"></MainProcessFlowDiagram>
    </MudTabPanel>
    <MudTabPanel Text="Tanks">
        <TankTable MainProcessId="@MainProcessId" RefreshProcessFlowDiagram="RefreshProcessFlowDiagram"></TankTable>
    </MudTabPanel>
    <MudTabPanel Text="Pumps">
        <PumpTable MainProcessId="@MainProcessId" RefreshProcessFlowDiagram="RefreshProcessFlowDiagram"></PumpTable>
    </MudTabPanel>
    <MudTabPanel Text="Operators">
        <OperatorTable MainProcessId="@MainProcessId" RefreshProcessFlowDiagram="RefreshProcessFlowDiagram"></OperatorTable>
    </MudTabPanel>
    <MudTabPanel Text="Mixers">
        <MixerTable MainProcessId="@MainProcessId" RefreshProcessFlowDiagram="RefreshProcessFlowDiagram"></MixerTable>
    </MudTabPanel>
    <MudTabPanel Text="SKIDs">
        <ContinuousSystemTable MainProcessId="@MainProcessId" RefreshProcessFlowDiagram="RefreshProcessFlowDiagram"></ContinuousSystemTable>
    </MudTabPanel>
    <MudTabPanel Text="Lines">
        <LineTable MainProcessId="@MainProcessId" RefreshProcessFlowDiagram="RefreshProcessFlowDiagram"></LineTable>
    </MudTabPanel>
   
</MudTabs>

@code {
    [Parameter]
    public Guid MainProcessId { get; set; }
    public NewSimulation Simulation { get; set; } = new();
    bool isLoading { get; set; } = false;
    public async Task RefreshProcessFlowDiagram()
    {

        isLoading = true;

        var result = await GenericService.GetById<NewSimulationDTO, GetProcessByIdRequest>(new GetProcessByIdRequest()
        {
            MainProcessId = MainProcessId,



        });
        if (result.Succeeded)
        {

            _snackBar.ShowSuccess("Process flow digram was loaded succesfully");
            Simulation = result.Data.MapProcess();
            isLoading = false;
            StateHasChanged();


        }
        else
        {
            _snackBar.ShowError(result.Messages);
        }
    }
}
