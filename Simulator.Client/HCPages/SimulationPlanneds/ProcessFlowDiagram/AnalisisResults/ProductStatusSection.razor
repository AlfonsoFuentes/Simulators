<!-- ProductStatusSection.razor -->
@{
    var producibleProducts = ProductResults.Count(p => p.CanProduce);
    var totalProducts = ProductResults.Count;
}
<MudPaper Elevation="0" Class="pa-3 mt-3" Style="border: 1px solid #e0e0e0; border-radius: 4px;">
    <MudText Typo="Typo.body2" Class="mb-2">
        <strong>Product Status (@producibleProducts/@totalProducts can be produced):</strong>
    </MudText>

    <div class="d-flex flex-column gap-2">
        @foreach (var product in ProductResults)
        {
            <ProductStatusItem 
                Product="product"
                BackboneCapabilities="GetProductCapabilities(product.ProductName)" />
        }
    </div>
</MudPaper>

@code {
    [Parameter]
    public List<ProductAnalysisResult> ProductResults { get; set; } = new();
    
    [Parameter]
    public Dictionary<string, List<EquipmentCapabilityInfo>> BackboneCapabilities { get; set; } = new();

    private List<EquipmentCapabilityInfo> GetProductCapabilities(string productName)
    {
        return BackboneCapabilities?.ContainsKey(productName) == true 
            ? BackboneCapabilities[productName] 
            : new List<EquipmentCapabilityInfo>();
    }
}