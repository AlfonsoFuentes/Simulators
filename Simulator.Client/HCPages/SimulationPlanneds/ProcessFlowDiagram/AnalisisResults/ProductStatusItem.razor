<!-- ProductStatusItem.razor -->
<MudPaper Elevation="1" Class="pa-2">
    <div class="d-flex align-items-center justify-content-between">
        <div class="d-flex align-items-center">
            @if (Product.CanProduce)
            {
                <MudIcon Icon="@Icons.Material.Filled.CheckCircle"
                         Color="Color.Success"
                         Class="mr-2" />
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Filled.Cancel"
                         Color="Color.Error"
                         Class="mr-2" />
            }
            <MudText>@Product.ProductName</MudText>
        </div>

        @if (Product.CanProduce)
        {
            <MudChip T="string" Color="Color.Success" Variant="Variant.Outlined" Size="Size.Small">
                Can Produce
            </MudChip>
        }
        else
        {
            <MudChip T="string" Color="Color.Error" Variant="Variant.Outlined" Size="Size.Small">
                Cannot Produce
            </MudChip>
        }
    </div>

    <!-- Mostrar información de capacidades para productos backbone -->
    @if (BackboneCapabilities.Any())
    {
        <div class="mt-2">
            @foreach (var capability in BackboneCapabilities)
            {
                <MudPaper Elevation="0" Class="pa-2 mt-1" Style="background-color: #f5f5f5; border-radius: 4px;">
                    <div class="d-flex justify-content-between">
                        <MudText Typo="Typo.body2">
                            <small><strong>Capacity:</strong> @capability.Capacity.ToString("F2")</small>
                        </MudText>
                        <MudText Typo="Typo.body2">
                            <small><strong>Batch Time:</strong> @capability.BatchTime.ToString("F1")</small>
                        </MudText>
                    </div>

                    <!-- NUEVO: Mostrar tiempos de pasos individuales -->
                    @if (capability.StepTimes.Any())
                    {
                        <div class="mt-2">
                            <StepTimesDetail CapabilityInfo=@capability />
                        </div>
                    }
                </MudPaper>
            }
        </div>
    }

    <!-- Mostrar materiales faltantes si no puede producir -->
    @if (!Product.CanProduce && Product.MissingMaterials.Any())
    {
        <div class="mt-2">
            <MudText Typo="Typo.body2" Color="Color.Error">
                <small><strong>Missing Materials:</strong></small>
            </MudText>
            <div class="d-flex flex-wrap gap-1 mt-1">
                @foreach (var material in Product.MissingMaterials)
                {
                    <MudChip T="string" Color="Color.Error"
                             Variant="Variant.Filled"
                             Size="Size.Small">
                        <small>@material.MaterialName</small>
                    </MudChip>
                }
            </div>
        </div>
    }
</MudPaper>

@code {
    [Parameter]
    public ProductAnalysisResult Product { get; set; } = new();

    [Parameter]
    public List<EquipmentCapabilityInfo> BackboneCapabilities { get; set; } = new();
}